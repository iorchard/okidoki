# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for masakari
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

---
release_group: null

labels:
  api:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  engine:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  job:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  

images:
  tags:
    masakari_api: jijisa/centos-source-masakari-api:train
    masakari_engine: jijisa/centos-source-masakari-engine:train
    db_init: docker.io/openstackhelm/heat:train-ubuntu_bionic
    masakari_db_sync: jijisa/centos-source-masakari-api:train
    db_drop: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_user: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_service: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    ks_endpoints: docker.io/openstackhelm/heat:stein-ubuntu_bionic
    rabbit_init: docker.io/rabbitmq:3.7-management
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
  pull_policy: "IfNotPresent"
  local_registry:
    active: false
    exclude:
      - dep_check


#bootstrap:

network_policy:
  masakari:
    ingress:
      - {}
    egress:
      - {}

conf:
  masakari:
    DEFAULT:
      debug: false
      use_syslog: false
      masakari_api_listen: 0.0.0.0
      os_user_domain_name: default
      os_project_domain_name: default
      os_privileged_user_tenant: service
      os_privileged_user_name: nova
      os_privileged_user_password: password
      masakari_api_workers: 2
    database:
      max_retries: -1
    keystone_authtoken:
      auth_type: password
      auth_version: v3
      service_token_roles_required: true
      memcache_security_strategy: ENCRYPT
    oslo_messaging_notifications:
      driver: noop
    oslo_middleware:
      enable_proxy_headers_parsing: true

network:
  api:
    ingress:
      public: true
      classes:
        namespace: "nginx"
        cluster: "nginx-cluster"
      annotations:
        nginx.ingress.kubernetes.io/rewrite-target: /
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
    external_policy_local: false
    node_port:
      enabled: false
      port: 30093

dependencies:
  static:
    api:
      jobs:
        - masakari-db-sync
        - masakari-rabbit-init
        - masakari-ks-user
        - masakari-ks-endpoints
      services:
        - endpoint: internal
          service: oslo_db
        - endpoint: internal
          service: identity
        - endpoint: internal
          service: oslo_messaging
    db_drop:
      services:
        - endpoint: internal
          service: oslo_db
    db_init:
      services:
        - endpoint: internal
          service: oslo_db
    db_sync:
      jobs:
        - masakari-db-init
      services:
        - endpoint: internal
          service: oslo_db
    ks_endpoints:
      jobs:
        - masakari-ks-service
      services:
        - endpoint: internal
          service: identity
    ks_service:
      services:
        - endpoint: internal
          service: identity
    ks_user:
      services:
        - endpoint: internal
          service: identity
    rabbit_init:
      services:
        - endpoint: internal
          service: oslo_messaging

secrets:
  identity:
    admin: masakari-keystone-admin
    masakari: masakari-keystone-user
  oslo_db:
    admin: masakari-db-admin
    masakari: masakari-db-user
  oslo_messaging:
    admin: masakari-rabbitmq-admin
    masakari: masakari-rabbitmq-user

endpoints:
  cluster_domain_suffix: cluster.local
  identity:
    name: keystone
    auth:
      admin:
        region_name: RegionOne
        username: admin
        password: password
        project_name: admin
        user_domain_name: default
        project_domain_name: default
      masakari:
        role: admin
        region_name: RegionOne
        username: masakari
        password: password
        project_name: service
        user_domain_name: service
        project_domain_name: service
    hosts:
      default: keystone
      internal: keystone-api
    host_fqdn_override:
      default: null
    path:
      default: /v3
    scheme:
      default: http
    port:
      api:
        default: 80
        internal: 5000
  instance_ha:
    name: masakari
    hosts:
      default: masakari-api
      public: masakari
    host_fqdn_override:
      default: null
    path:
      default: null
    scheme:
      default: http
    port:
      api:
        default: 15868
        public: 80
  oslo_db:
    auth:
      admin:
        username: root
        password: password
        secret:
          tls:
            internal: mariadb-tls-direct
      masakari:
        username: masakari
        password: password
    hosts:
      default: mariadb
    host_fqdn_override:
      default: null
    path: /masakari
    scheme: mysql+pymysql
    port:
      mysql:
        default: 3306
  oslo_cache:
    auth:
      # NOTE(portdirect): this is used to define the value for keystone
      # authtoken cache encryption key, if not set it will be populated
      # automatically with a random value, but to take advantage of
      # this feature all services should be set to use the same key,
      # and memcache service.
      memcache_secret_key: null
    hosts:
      default: memcached
    host_fqdn_override:
      default: null
    port:
      memcache:
        default: 11211
  oslo_messaging:
    auth:
      admin:
        username: rabbitmq
        password: password
      masakari:
        username: masakari
        password: password
    statefulset:
      replicas: 2
      name: rabbitmq-rabbitmq
    hosts:
      default: rabbitmq
    host_fqdn_override:
      default: null
    path: /masakari
    scheme: rabbit
    port:
      amqp:
        default: 5672
      http:
        default: 15672
  kube_dns:
    namespace: kube-system
    name: kubernetes-dns
    hosts:
      default: kube-dns
    host_fqdn_override:
      default: null
    path:
      default: null
    scheme: http
    port:
      dns:
        default: 53
        protocol: UDP
  ingress:
    namespace: null
    name: ingress
    hosts:
      default: ingress
    port:
      ingress:
        default: 80

pod:
  security_context:
    masakari:
      pod:
        runAsUser: 42485
      container:
        masakari_api:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        masakari_engine:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
  affinity:
    anti:
      type:
        default: preferredDuringSchedulingIgnoredDuringExecution
      topologyKey:
        default: kubernetes.io/hostname
      weight:
        default: 10
  mounts:
    masakari_api:
      init_container: null
      masakari_api:
        volumeMounts:
        volumes:
    masakari_engine:
      init_container: null
      masakari_engine:
        volumeMounts:
        volumes:
    masakari_db_sync:
      masakari_db_sync:
        volumeMounts:
        volumes:
  replicas:
    api: 1
    engine: 1
  lifecycle:
    upgrades:
      deployments:
        revision_history: 3
        pod_replacement_strategy: RollingUpdate
        rolling_update:
          max_unavailable: 1
          max_surge: 3
    disruption_budget:
      api:
        min_available: 0
      engine:
        min_available: 0
    termination_grace_period:
      api:
        timeout: 600
      engine:
        timeout: 600
  resources:
    enabled: false
    api:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    engine:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    jobs:
      db_sync:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_init:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      db_drop:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      ks_user:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      ks_service:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      ks_endpoints:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"
      rabbit_init:
        requests:
          memory: "128Mi"
          cpu: "100m"
        limits:
          memory: "1024Mi"
          cpu: "2000m"

manifests:
  certificates: false
  configmap_bin: true
  configmap_etc: true
  deployment_api: true
  deployment_engine: true
  ingress_api: true
  job_db_init: true
  job_db_sync: true
  job_db_drop: false
  job_ks_endpoints: true
  job_ks_service: true
  job_ks_user: true
  job_rabbit_init: true
  secret_db: true
  secret_keystone: true
  secret_rabbitmq: true
  service_ingress_api: true
  service_api: true

